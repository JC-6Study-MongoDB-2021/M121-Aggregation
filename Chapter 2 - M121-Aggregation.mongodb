use('aggregations');

// --- Chapter 2 --- \\
// Lab 1
/*
let favorites = ["Sandra Bullock","Tom Hanks","Julia Roberts","Kevin Spacey","George Clooney"]

db.movies.aggregate([
{ $match:
  { 
    "countries": {"$in": ["USA"]}, 
    "tomatoes.viewer.rating": { "$gte": 3},
    "cast": {"$in": favorites},
  }
},
{ $project: 
  {
  _id: 0,
  "tomatoes.viewer.rating": 1,
  title: 1,
  cast: 1,
  num_favs:
    {
      $size: { $setIntersection:["$cast",favorites] }
    }
  }
},
{ $sort:
  {
    "num_favs":-1,
    "tomatoes.viewer.rating":-1,
    title:-1
  }
},{
  $skip: 24
}
])
*/

// Lab 2 - I had no clue how to solve this and got it from the web
/*
db.movies.aggregate([
{ $match:
  { 
    "languages": {"$in": ["English"]}, 
    "imdb.rating": { "$gte": 1},
    "imdb.votes": { "$gte": 1},
    "released" : { $gte : new ISODate("1990-01-12T20:15:31Z") }
  }
},
{ $addFields : 
  { "scaled_votes" : 
    { $add: 
      [ 1,
        { $multiply: 
          [ 9,
            { $divide: 
              [ { $subtract: ["$imdb.votes" , 5] },
                { $subtract: [1521105, 5] }
              ]
            }
          ]
        }
		  ]
    }
	}
},
{ $addFields : 
  { "normalized_rating" : { $avg : [ "$scaled_votes", "$imdb.rating" ] } } 
},
{ 
  $sort : { "normalized_rating" : 1 } 
},
{
  $project :  { _id: 0, title: 1 }
},
{
  $limit: 1
}
])
*/